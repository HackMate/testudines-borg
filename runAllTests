os.loadAPI("/apis/cclog")

_G.GlobalWriter = cclog.FileLogger("test.log", fs)

local logger = cclog.Logger("runAllTests")

function getFiles()
    local placesToCheck = { "test" }
    local testFiles = {}

    while #placesToCheck > 0 do

        local current = placesToCheck[#placesToCheck]
        placesToCheck[#placesToCheck] = nil

        if not fs.isDir(current) then
            testFiles[#testFiles + 1] = current
        else
            for _, file in pairs(fs.find("/" .. current .. "/*")) do
                if fs.isDir(file) then
                    placesToCheck[#placesToCheck + 1] = file
                else
                    testFiles[#testFiles + 1] = file
                end
            end
        end
    end

    return testFiles
end

-- Hack: Enable global test reporting.
_G.createGlobalReport = true
_G.spec = {
    contexts = {}, passed = 0, failed = 0, current = nil
}


local success = true
local failedTests = {}
local startTime = os.clock()
for _, file in pairs(getFiles()) do
    failedTests[file] = os.loadAPI(file)
    if success then
        success = failedTests[file]
    end
end
local endTime = os.clock()
local difference = endTime - startTime

if success then
    logger.info("Tests: succeded in ".. difference)
else
    for key, _ in pairs(failedTests) do
        if not failedTests[key] then
            logger.warn("Failed test: " .. key)
        end
    end
end





