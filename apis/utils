local validFuels = {}
validFuels["minecraft:coal"] = true
validFuels["minecraft:lava_bucket"] = true
validFuels["minecraft:coal_block"] = true
validFuels["minecraft:log"] = true

function isFuel(detail)
    if detail and detail.name and validFuels[detail.name] then
        return true
    else
        return false
    end
end

function positionKey(pos)
    if pos == nil then
        error("Cannot create a key for a nil value")
    end
    return string.format("%d,%d,%d", pos.x, pos.y, pos.z)
end

-- Helper that allows the serialization of values. All they need to do is implement __serialize
-- and provide that function through their metatable. This way the table can be deserialized
-- through load(..).
function serializeTable(table)
    local shallowCopy = "{"
    for key, value in pairs(table) do
        if type(value) == "table" then
            local metaTable = getmetatable(value)
            if metaTable and metaTable["__serialize"] then
                shallowCopy = string.format("%s%s=%s,", shallowCopy, key, metaTable.__serialize(value))
            else
                shallowCopy = string.format("%s%s=%s,", shallowCopy, key, serializeTable(value))
            end
        elseif type(value) ~= "function" then
            shallowCopy = string.format("%s%s=%q,", shallowCopy, key, tostring(value))
        end
    end
    return shallowCopy .. "}"
end

function deserializeTable(data)
    if data then
        local success, value = pcall(load("return " .. data))
        if success then
            return success, value
        else
            return false, "could not deserialize data: " .. data
        end
    else
        return false
    end
end

function loadTable(fileName, fileSystem)
    local fileSystem = fileSystem or fs
    local file = fileSystem.open(fileName, "r")
    if file then
        local success, result = deserializeTable(file.readAll())
        file.close()
        return success, result
    else
        return false, "could not open file" .. fileName
    end
end

function saveTable(fileName, table, fileSystem)
    local fileSystem = fileSystem or fs
    local file = fileSystem.open(fileName, "w")
    if file then
        file.write(utils.serializeTable(table))
        file.close()
        return true
    else
        return false, "Could not open file '" .. fileName .. "' for writing."
    end
end


