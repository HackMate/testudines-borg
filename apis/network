os.loadAPI("/apis/model/position")
os.loadAPI("/apis/cclog")

local logger = cclog.Logger("Network")

local PROTOCOL = "hub01"

function Network()
    local self = {}

    local function getModemPostion()
        for _, side in pairs(rs.getSides()) do
            if peripheral.getType(side) == "modem" then
                return side
            end
        end
        error("Turtle does not seem to have a modem.")
    end

    -- Helper that wrapps error messages --
    local function try(func)
        local success, message = pcall(func)
        if not success then
            error("Network error: " .. message)
        end
    end

    function self.openConnection()
        try(
            function()
                logger.info("connecting")
                rednet.open(getModemPostion())
                logger.info("connected")
            end
        )
    end

    function self.closeConnection()
        try(
            function()
                logger.info("disconnecting")
                rednet.close(getModemPostion())
                logger.info("disconnected")
            end
        )
    end

    function self.send(id, message)
        if id then
            return rednet.send(id, message, PROTOCOL)
        end
    end

    function self.receive(filter, timeout)
        return rednet.receive(filter, timeout, PROTOCOL)
    end

    function self.getGpsLocation()
        local x, y, z = gps.locate()
        if x then
            return position.Position(x, y, z)
        else
            return position.Position()
        end
    end

    self.openConnection()

    return self
end