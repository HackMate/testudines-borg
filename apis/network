os.loadAPI("/apis/model/position")

local function getModemPostion()
    for _, side in pairs(rs.getSides()) do
        if peripheral.getType(side) == "modem" then
            return side
        end
    end
    error("Rednet: Turtle does not seem to have a modem.")
end

-- Helper that wrapps error messages --
local function try(func)
    local success, message = pcall(func)
    if not success then
        error("Rednet: " .. message)
    end
end

function openConnection()
    try(
        function()
            print("Rednet: connecting")
            rednet.open(getModemPostion())
            print("Rednet: connected")
        end
    )
end

function closeConnection()
    try(
        function()
            print("Rednet: disconnecting")
            rednet.close(getModemPostion())
            print("Rednet: disconnected")
        end
    )
end

function send(id, message)
    if id then
        return rednet.send(id, message)
    end
end

function receive(filter, timeout)
    return rednet.receive(filter, timeout)
end

function getGpsLocation()
    local x, y, z = gps.locate()
    if x then
        return position.Position:new(x, y, z)
    else
        return position.Position:new()
    end
end

function init()
    openConnection()
end
